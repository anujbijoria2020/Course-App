<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Course-App</title>
    <style>
        * {
      box-sizing: border-box;
    }

    body {
      margin: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f7f9fc;
      color: #333;
    }

    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 30px;
      background-color: #2c3e50;
      color: white;
      position: sticky;
      top: 0;
      z-index: 10;
      height: 10%;
    }

    header h1 {
      margin: 0;
      font-size: 24px;
    }

    
    main {
      max-width: 80%;
      margin: 30px auto;
      margin-left: 15%;
      padding: 0 20px;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(30%, 1fr));
      gap: 20px;
    }

    
    .course-card {
      background-color: white;
      border-radius: 10px;
      box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
      padding: 20px;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      transition: transform 0.2s ease;
    }


    .course-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 6px 18px rgba(0, 0, 0, 0.15);
    }

    .course-image {
      width: 100%;
      height: 140px;
      border-radius: 8px;
      object-fit: cover;
      margin-bottom: 15px;
      background-color: #ddd;
    }

    .course-title {
      font-size: 18px;
      font-weight: 600;
      margin-bottom: 8px;
    }

    .course-description {
      font-size: 14px;
      color: #555;
      margin-bottom: 15px;
      flex-grow: 1;
    }

    .course-price {
      font-weight: 700;
      color: #27ae60;
      margin-bottom: 15px;
    }
    
        .buttons {
      display: flex;
      gap: 10px;
    }

    .btn {
      flex: 1;
      padding: 10px 0;
      border-radius: 6px;
      font-weight: 600;
      font-size: 14px;
      cursor: pointer;
      border: none;
      transition: background-color 0.3s ease;
      color: white;
      text-align: center;
      user-select: none;
      text-decoration: none;
      display: inline-block;
    }

     .btn.Buy {
      background-color: #2980b9;
    }

    .btn.Buy:hover {
      background-color: #1c5985;
    }

    .btn.View {
      background-color: #c0392b;
    }

    .btn.View:hover {
      background-color: #822419;
    }

    .aside{
        position: fixed;
        left: 0%;
        top: 7.75%;
        background: #2c3e50;
        height:90vh;
        width: 15%;
     display: flex;
     align-content: center;
        justify-content: space-around;
        z-index: 9999;
    }
    li{
        list-style: none;
        font-size: larger;
        margin: 80% -10%;
    }
    .list>li>a{
        color: white;
        text-decoration: none;
        cursor: pointer;
    }
    </style>
      <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
       <header>
<h1>Welcome To Course-App</h1>
        </header>
    <main>

<div class="aside">
    <ul class="list">
        <li class="items"><a href="/user/panel">Home</a></li>
        <li class="items"><a href="/user/purchased">Purchased</a></li>
        <li class="items"><a href="contact.html">contact</a></li>
    </ul>
</div>
    </main>
    <footer>

    </footer>

</body>
<script>

        async function purchase(courseId){
const token = localStorage.getItem("token");
console.log(courseId);
      try{
        const res = await axios.post("http://localhost:3000/course/purchase",{ courseId:courseId},{
            headers:{
                "token":token,
            },
            
        });
        alert("course purchased");
         console.log(res);
      }catch(err){
    console.log("error",err);
   }

    }


async function fetchUserPanel(){

    const token = localStorage.getItem("token");
    if(!token){
       return res.render("/user");
    }
   try{
    console.log("inside try block")
    const res = await axios.get("http://localhost:3000/user/course/valid",{
        headers:{
            "token":token,
            "Content-type":"application/json"
        }
    });
   console.log(res);
     console.log(res.data.courses);
    const courseArray = res.data.courses;

       const main = document.querySelector("main");

    courseArray.forEach(course => {
        const articleEl  = document.createElement("article");
        articleEl.setAttribute("class","course-card");
        
        const imgEl = document.createElement("img");
        imgEl.setAttribute("class","course-image");
        imgEl.setAttribute("alt",course.title);
        imgEl.setAttribute("src","https://img.freepik.com/free-vector/laptop-with-program-code-isometric-icon-software-development-programming-applications-dark-neon_39422-971.jpg?ga=GA1.1.401802642.1716019925&semt=ais_hybrid&w=740");

        const h2El = document.createElement("h2");
        h2El.setAttribute("class","course-title");
        h2El.innerText = course.title;

         const descEl = document.createElement("p");
        descEl.setAttribute("class", "course-description");
        descEl.innerText = course.description;

           const priceEl = document.createElement("p");
        priceEl.setAttribute("class", "course-price");
        priceEl.innerText = `$${course.price}`;

        const buttonsDiv = document.createElement("div");
        buttonsDiv.setAttribute("class", "buttons");

        const BuyNowBtn = document.createElement("button");
        BuyNowBtn.setAttribute("class", "btn Buy");
        BuyNowBtn.innerText = "Buy Now";
        BuyNowBtn.addEventListener("click", () => purchase(course._id));

        const ViewCourseBtn = document.createElement("button");
        ViewCourseBtn.setAttribute("class","btn View");
        ViewCourseBtn.innerText ="view Course";

        buttonsDiv.appendChild(BuyNowBtn);
        buttonsDiv.appendChild(ViewCourseBtn);

        articleEl.appendChild(imgEl);
        articleEl.appendChild(h2El);
        articleEl.appendChild(descEl);
        articleEl.appendChild(priceEl);
        articleEl.appendChild(buttonsDiv);

         main.appendChild(articleEl);

    });


   }catch(err){
    console.log("error",err);
}
}
window.onload = fetchUserPanel;
</script>
</html>
